
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
PARTITION_ENTRY     0x10              kernel/hd.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x41a             kernel/global.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
LOAD fs/main.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.text           0x0000000000030400     0x431f
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x410 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305f0                hwint09
                0x0000000000030620                hwint10
                0x0000000000030650                hwint11
                0x0000000000030680                hwint12
                0x00000000000306b0                hwint13
                0x00000000000306e0                hwint14
                0x0000000000030710                hwint15
                0x0000000000030734                divide_error
                0x000000000003073a                single_step_exception
                0x0000000000030740                nmi
                0x0000000000030746                breakpoint_exception
                0x000000000003074c                overflow
                0x0000000000030752                bounds_check
                0x0000000000030758                inval_opcode
                0x000000000003075e                copr_not_available
                0x0000000000030764                double_fault
                0x0000000000030768                copr_seg_overrun
                0x000000000003076e                inval_tss
                0x0000000000030772                segment_not_present
                0x0000000000030776                stack_exception
                0x000000000003077a                general_protection
                0x000000000003077e                page_fault
                0x0000000000030782                copr_error
                0x00000000000307cb                sys_call
                0x00000000000307eb                restart
 .text          0x0000000000030810       0x20 kernel/syscall.o
                0x0000000000030810                sendrec
                0x0000000000030824                printx
 .text          0x0000000000030830       0x95 kernel/start.o
                0x0000000000030830                cstart
 .text          0x00000000000308c5      0x356 kernel/main.o
                0x00000000000308c5                kernel_main
                0x0000000000030b49                get_ticks
                0x0000000000030b7d                TestA
                0x0000000000030b82                TestB
                0x0000000000030baa                TestC
                0x0000000000030bd2                panic
 .text          0x0000000000030c1b       0xd5 kernel/clock.o
                0x0000000000030c1b                clock_handler
                0x0000000000030c5e                milli_delay
                0x0000000000030c98                init_clock
 .text          0x0000000000030cf0      0x64b kernel/keyboard.o
                0x0000000000030cf0                keyboard_handler
                0x0000000000030d50                init_keyboard
                0x0000000000030db9                keyboard_read
 .text          0x000000000003133b      0x51a kernel/tty.o
                0x000000000003133b                task_tty
                0x00000000000313f5                in_process
                0x000000000003165b                tty_write
                0x00000000000316a1                sys_printx
 .text          0x0000000000031855      0x424 kernel/console.o
                0x0000000000031855                init_screen
                0x0000000000031973                is_current_console
                0x000000000003198e                out_char
                0x0000000000031bd8                select_console
                0x0000000000031c0e                scroll_screen
 .text          0x0000000000031c79      0x130 kernel/i8259.o
                0x0000000000031c79                init_8259A
                0x0000000000031d4e                spurious_irq
                0x0000000000031d85                put_irq_handler
 .text          0x0000000000031da9        0x0 kernel/global.o
 .text          0x0000000000031da9      0x614 kernel/protect.o
                0x0000000000031da9                init_prot
                0x00000000000321c6                seg2phys
                0x0000000000032282                exception_handler
 .text          0x00000000000323bd     0x1721 kernel/proc.o
                0x00000000000323bd                schedule
                0x0000000000032449                sys_sendrec
                0x0000000000032568                send_recv
                0x0000000000032625                ldt_seg_linear
                0x000000000003266f                va2la
                0x00000000000326d0                reset_msg
                0x00000000000334bd                inform_int
                0x000000000003362d                dump_proc
                0x00000000000339d1                dump_msg
 .text          0x0000000000033ade       0x58 kernel/systask.o
                0x0000000000033ade                task_sys
 .text          0x0000000000033b36      0x4b8 kernel/hd.o
                0x0000000000033b36                task_hd
                0x0000000000033fc3                hd_handler
 .text          0x0000000000033fee       0x50 kernel/printf.o
                0x0000000000033fee                printf
 .text          0x000000000003403e      0x305 kernel/vsprintf.o
                0x000000000003409c                vsprintf
                0x000000000003431d                sprintf
 *fill*         0x0000000000034343        0xd 
 .text          0x0000000000034350      0x19a lib/kliba.o
                0x0000000000034350                disp_str
                0x000000000003438e                disp_color_str
                0x00000000000343cd                out_byte
                0x00000000000343d9                in_byte
                0x00000000000343e3                port_read
                0x00000000000343f6                port_write
                0x0000000000034409                disable_irq
                0x000000000003443e                enable_irq
                0x000000000003445d                disable_int
                0x000000000003445f                enable_int
                0x0000000000034461                glitter
 .text          0x00000000000344ea      0x119 lib/klib.o
                0x00000000000344ea                itoa
                0x0000000000034595                disp_int
                0x00000000000345bc                delay
 *fill*         0x0000000000034603        0xd 
 .text          0x0000000000034610       0x78 lib/string.o
                0x0000000000034610                memcpy
                0x0000000000034639                memset
                0x000000000003465a                strcpy
                0x0000000000034672                strlen
 .text          0x0000000000034688       0x54 lib/misc.o
                0x0000000000034688                spin
                0x00000000000346a3                assertion_failure
 .text          0x00000000000346dc       0x43 fs/main.o
                0x00000000000346dc                task_fs
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000034720      0xe65
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000034720       0x47 kernel/start.o
 *fill*         0x0000000000034767        0x1 
 .rodata        0x0000000000034768       0x34 kernel/main.o
 .rodata        0x000000000003479c       0x64 kernel/keyboard.o
 .rodata        0x0000000000034800       0x90 kernel/tty.o
 .rodata        0x0000000000034890       0x11 kernel/i8259.o
 *fill*         0x00000000000348a1        0x3 
 .rodata        0x00000000000348a4        0x4 kernel/global.o
                0x00000000000348a4                FSBUF_SIZE
 *fill*         0x00000000000348a8       0x18 
 .rodata        0x00000000000348c0      0x540 kernel/protect.o
 .rodata        0x0000000000034e00      0x63e kernel/proc.o
 .rodata        0x000000000003543e       0x11 kernel/systask.o
 *fill*         0x000000000003544f        0x1 
 .rodata        0x0000000000035450       0xbd kernel/hd.o
 *fill*         0x000000000003550d        0x3 
 .rodata        0x0000000000035510       0x61 lib/misc.o
 .rodata        0x0000000000035571       0x14 fs/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000035588      0x960
 *(.eh_frame)
 .eh_frame      0x0000000000035588       0x38 kernel/start.o
 .eh_frame      0x00000000000355c0       0xb0 kernel/main.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000035670       0x60 kernel/clock.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x00000000000356d0       0xe0 kernel/keyboard.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x00000000000357b0       0xfc kernel/tty.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x00000000000358ac      0x100 kernel/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000000359ac       0x60 kernel/i8259.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035a0c       0xb0 kernel/protect.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000035abc      0x1d8 kernel/proc.o
                                        0x1f0 (松开之前的大小)
 .eh_frame      0x0000000000035c94       0x1c kernel/systask.o
                                         0x34 (松开之前的大小)
 .eh_frame      0x0000000000035cb0       0xfc kernel/hd.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x0000000000035dac       0x20 kernel/printf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000035dcc       0x60 kernel/vsprintf.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035e2c       0x60 lib/klib.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035e8c       0x3c lib/misc.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x0000000000035ec8       0x20 fs/main.o
                                         0x38 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000036000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000036000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000036000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000036000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000036000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000036000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000036000        0x0 kernel/kernel.o

.data           0x0000000000036000      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000036000        0x2 kernel/kernel.o
 .data          0x0000000000036002        0x0 kernel/start.o
 .data          0x0000000000036002        0x0 kernel/main.o
 .data          0x0000000000036002        0x0 kernel/clock.o
 *fill*         0x0000000000036002       0x1e 
 .data          0x0000000000036020      0x600 kernel/keyboard.o
                0x0000000000036020                keymap
 .data          0x0000000000036620        0x0 kernel/tty.o
 .data          0x0000000000036620        0x0 kernel/console.o
 .data          0x0000000000036620        0x0 kernel/i8259.o
 .data          0x0000000000036620      0x140 kernel/global.o
                0x0000000000036620                task_table
                0x00000000000366c0                user_proc_table
                0x0000000000036738                sys_call_table
                0x0000000000036744                dd_map
                0x000000000003675c                fsbuf
 .data          0x0000000000036760        0x0 kernel/protect.o
 .data          0x0000000000036760        0x0 kernel/proc.o
 .data          0x0000000000036760        0x0 kernel/systask.o
 .data          0x0000000000036760        0x0 kernel/hd.o
 .data          0x0000000000036760        0x0 kernel/printf.o
 .data          0x0000000000036760        0x0 kernel/vsprintf.o
 .data          0x0000000000036760        0x0 lib/klib.o
 .data          0x0000000000036760        0x0 lib/misc.o
 .data          0x0000000000036760        0x0 fs/main.o

.data1
 *(.data1)
                0x0000000000036760                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000036760                . = .
                0x0000000000036760                __bss_start = .

.bss            0x0000000000036760    0x3aa6c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000036760      0x800 kernel/kernel.o
 .bss           0x0000000000036f60        0x0 kernel/start.o
 .bss           0x0000000000036f60        0x0 kernel/main.o
 .bss           0x0000000000036f60        0x0 kernel/clock.o
 .bss           0x0000000000036f60       0x58 kernel/keyboard.o
 .bss           0x0000000000036fb8        0x0 kernel/tty.o
 .bss           0x0000000000036fb8        0x0 kernel/console.o
 .bss           0x0000000000036fb8        0x0 kernel/i8259.o
 .bss           0x0000000000036fb8        0x0 kernel/global.o
 .bss           0x0000000000036fb8        0x0 kernel/protect.o
 .bss           0x0000000000036fb8        0x0 kernel/proc.o
 .bss           0x0000000000036fb8        0x0 kernel/systask.o
 *fill*         0x0000000000036fb8        0x8 
 .bss           0x0000000000036fc0      0x420 kernel/hd.o
 .bss           0x00000000000373e0        0x0 kernel/printf.o
 .bss           0x00000000000373e0        0x0 kernel/vsprintf.o
 .bss           0x00000000000373e0        0x0 lib/klib.o
 .bss           0x00000000000373e0        0x0 lib/misc.o
 .bss           0x00000000000373e0        0x0 fs/main.o
 *(COMMON)
 COMMON         0x00000000000373e0    0x39dda kernel/global.o
                0x00000000000373e0                idt_ptr
                0x0000000000037400                task_stack
                0x000000000006f400                k_reenter
                0x000000000006f420                gdt
                0x000000000006f820                tty_table
                0x0000000000070460                tss
                0x00000000000704c8                nr_current_console
                0x00000000000704cc                disp_pos
                0x00000000000704d0                gdt_ptr
                0x00000000000704e0                idt
                0x0000000000070ce0                ticks
                0x0000000000070d00                console_table
                0x0000000000070d40                irq_table
                0x0000000000070d80                p_proc_ready
                0x0000000000070da0                proc_table
 *fill*         0x00000000000711ba        0x2 
 COMMON         0x00000000000711bc       0x10 kernel/hd.o
                0x00000000000711bc                PARTITION_ENTRY
                0x00000000000711cc                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000000711cc                . = ALIGN (0x4)
                0x00000000000711cc                . = SEGMENT_START ("ldata-segment", .)
                0x00000000000711cc                . = ALIGN (0x4)
                0x00000000000711cc                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000000711cc                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x34
 *(.comment)
 .comment       0x0000000000000000       0x34 kernel/start.o
                                         0x35 (松开之前的大小)
 .comment       0x0000000000000034       0x35 kernel/main.o
 .comment       0x0000000000000034       0x35 kernel/clock.o
 .comment       0x0000000000000034       0x35 kernel/keyboard.o
 .comment       0x0000000000000034       0x35 kernel/tty.o
 .comment       0x0000000000000034       0x35 kernel/console.o
 .comment       0x0000000000000034       0x35 kernel/i8259.o
 .comment       0x0000000000000034       0x35 kernel/global.o
 .comment       0x0000000000000034       0x35 kernel/protect.o
 .comment       0x0000000000000034       0x35 kernel/proc.o
 .comment       0x0000000000000034       0x35 kernel/systask.o
 .comment       0x0000000000000034       0x35 kernel/hd.o
 .comment       0x0000000000000034       0x35 kernel/printf.o
 .comment       0x0000000000000034       0x35 kernel/vsprintf.o
 .comment       0x0000000000000034       0x35 lib/klib.o
 .comment       0x0000000000000034       0x35 lib/misc.o
 .comment       0x0000000000000034       0x35 fs/main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
